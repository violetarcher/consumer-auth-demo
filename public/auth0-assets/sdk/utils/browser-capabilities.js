async function a(){if("undefined"==typeof navigator)return!1;const a=navigator;if(a.brave?.isBrave&&"function"==typeof a.brave.isBrave)try{return Boolean(await a.brave.isBrave())}catch{return!1}return!1}function e(){return void 0!==window.PublicKeyCredential}function i(){return!0}async function n(){if(!window||!window.PublicKeyCredential)return!1;try{return Boolean(await window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable())}catch(a){return console.warn("isUserVerifyingPlatformAuthenticatorAvailable failed",a),!1}}async function t(){if(!e())return!1;try{return await n()&&Boolean(await window.PublicKeyCredential.isConditionalMediationAvailable())}catch(a){return console.warn("isPasskeySupported failed",a),!1}}async function r(){return{"js-available":!0,"is-brave":await a(),"webauthn-available":e(),"webauthn-platform-available":await n(),"allow-passkeys":await t()}}export{r as getBrowserCapabilities,a as isBrave,i as isJsAvailable,t as isPasskeySupported,e as isWebAuthAvailable,n as isWebAuthPlatformAvailable};
//# sourceMappingURL=browser-capabilities.js.map

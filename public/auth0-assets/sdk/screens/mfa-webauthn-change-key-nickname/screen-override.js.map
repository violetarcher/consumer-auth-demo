{"version":3,"file":"screen-override.js","sources":["../../../../src/screens/mfa-webauthn-change-key-nickname/screen-override.ts"],"sourcesContent":["import { Screen } from '../../models/screen';\n\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { ScreenMembersOnMfaWebAuthnChangeKeyNickname as OverrideOptions } from '../../../interfaces/screens/mfa-webauthn-change-key-nickname';\n\n/**\n * @class ScreenOverride\n * @extends Screen\n * @implements OverrideOptions\n * @description Provides specific data accessors for the 'mfa-webauthn-change-key-nickname' screen context.\n * It extracts and makes the current `nickname` of the security key easily accessible.\n */\nexport class ScreenOverride extends Screen implements OverrideOptions {\n  /**\n   * Screen-specific data containing the current nickname of the WebAuthn key.\n   * @type {{ nickname: string; } | null}\n   * @public\n   */\n  public data: OverrideOptions['data'];\n\n  /**\n   * Initializes a new instance of the `ScreenOverride` class for the\n   * 'mfa-webauthn-change-key-nickname' screen.\n   * Parses the screen context to extract the `nickname`.\n   * @param {ScreenContext} screenContext - The screen context provided by Universal Login.\n   */\n  constructor(screenContext: ScreenContext) {\n    super(screenContext); // Initialize the base Screen class\n    this.data = ScreenOverride.getScreenData(screenContext);\n  }\n\n  /**\n   * @static\n   * @method getScreenData\n   * @description Extracts and transforms the screen-specific data from the provided screen context.\n   * Specifically targets the `nickname` property from the raw context data.\n   *\n   * @param {ScreenContext} screenContext - The screen context containing the raw data.\n   * @returns {OverrideOptions['data']} The structured screen data containing the current `nickname`,\n   *                                    or `null` if the required `nickname` data is not present\n   *                                    or not a string in the context.\n   */\n  static getScreenData = (screenContext: ScreenContext): OverrideOptions['data'] => {\n    // Access the raw data object from the context\n    const rawData = screenContext.data;\n\n    // Check if data exists and if the 'nickname' property is a non-empty string\n    if (!rawData || typeof rawData.nickname !== 'string') {\n      // Return null if essential data is missing or invalid type\n      return null;\n    }\n\n    // Return the structured data object with the nickname\n    return {\n      nickname: rawData.nickname,\n    };\n  };\n}"],"names":["ScreenOverride","Screen","data","constructor","screenContext","super","this","getScreenData","static","rawData","nickname"],"mappings":"gDAYM,MAAOA,UAAuBC,EAM3BC,KAQP,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKJ,KAAOF,EAAeO,cAAcH,GAc3CI,qBAAwBJ,IAEtB,MAAMK,EAAUL,EAAcF,KAG9B,OAAKO,GAAuC,iBAArBA,EAAQC,SAMxB,CACLA,SAAUD,EAAQC,UALX,IAMR"}
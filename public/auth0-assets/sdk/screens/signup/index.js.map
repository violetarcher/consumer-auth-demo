{"version":3,"file":"index.js","sources":["../../../../src/screens/signup/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport { ScreenOverride } from './screen-override';\nimport { TransactionOverride } from './transaction-override';\n\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { TransactionContext } from '../../../interfaces/models/transaction';\nimport type {\n  SignupMembers,\n  ScreenMembersOnSignup as ScreenOptions,\n  SignupOptions,\n  FederatedSignupOptions,\n  TransactionMembersOnSignup as TransactionOptions,\n} from '../../../interfaces/screens/signup';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\nexport default class Signup extends BaseContext implements SignupMembers {\n  static screenIdentifier: string = ScreenIds.SIGNUP;\n  screen: ScreenOptions;\n  transaction: TransactionOptions;\n\n  constructor() {\n    super();\n    const screenContext = this.getContext('screen') as ScreenContext;\n    const transactionContext = this.getContext('transaction') as TransactionContext;\n\n    this.screen = new ScreenOverride(screenContext);\n    this.transaction = new TransactionOverride(transactionContext);\n  }\n  /**\n   * @remarks\n   * This method handles the submission of the signup form.\n   *\n   * @example\n   * ```typescript\n   * import Signup from '@auth0/auth0-acul-js/signup';\n   *\n   * const signupManager = new Signup();\n   *\n   * signupManager.signup({\n   *  email: 'test@example.com',\n   *  password: 'P@$$wOrd123!',\n   * });\n   * ```\n   */\n  async signup(payload: SignupOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [Signup.screenIdentifier, 'signup'],\n    };\n    await new FormHandler(options).submitData<SignupOptions>(payload);\n  }\n\n  /**\n   * Handles the submission of the social signup form.\n   *\n   * @remarks\n   * This method is similar to the {@link signup} method but is used for social signups.\n   *\n   * @param payload - The payload containing the social signup options.\n   *\n   * @example\n   * ```typescript\n   * import Signup from '@auth0/auth0-acul-js/signup';\n   *\n   * const signupManager = new Signup();\n   *\n   * signupManager.federatedSignup({\n   *  connection: 'google-oauth2'\n   * });\n   * ```\n   */\n\n  async federatedSignup(payload: FederatedSignupOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [Signup.screenIdentifier, 'federatedSignup'],\n    };\n    await new FormHandler(options).submitData<FederatedSignupOptions>(payload);\n  }\n\n  /**\n   * @example\n   * import Signup from \"@auth0/auth0-acul-js/signup\";\n   * const signupManager = new Signup();\n   *\n   * signupManager.pickCountryCode();\n   */\n  async pickCountryCode(): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [Signup.screenIdentifier, 'pickCountryCode'],\n    };\n\n    await new FormHandler(options).submitData({\n      action: FormActions.PICK_COUNTRY_CODE,\n    });\n  }\n}\n\nexport { SignupMembers, SignupOptions, ScreenOptions as ScreenMembersOnSignup, TransactionOptions as TransactionMembersOnSignup, FederatedSignupOptions };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["Signup","BaseContext","static","ScreenIds","SIGNUP","screen","transaction","constructor","super","screenContext","this","getContext","transactionContext","ScreenOverride","TransactionOverride","signup","payload","options","state","telemetry","screenIdentifier","FormHandler","submitData","federatedSignup","pickCountryCode","action","FormActions","PICK_COUNTRY_CODE"],"mappings":"8VAiBqB,MAAAA,UAAeC,EAClCC,wBAAkCC,EAAUC,OAC5CC,OACAC,YAEA,WAAAC,GACEC,QACA,MAAMC,EAAgBC,KAAKC,WAAW,UAChCC,EAAqBF,KAAKC,WAAW,eAE3CD,KAAKL,OAAS,IAAIQ,EAAeJ,GACjCC,KAAKJ,YAAc,IAAIQ,EAAoBF,GAkB7C,YAAMG,CAAOC,GACX,MAAMC,EAAuB,CAC3BC,MAAOR,KAAKJ,YAAYY,MACxBC,UAAW,CAACnB,EAAOoB,iBAAkB,iBAEjC,IAAIC,EAAYJ,GAASK,WAA0BN,GAuB3D,qBAAMO,CAAgBP,GACpB,MAAMC,EAAuB,CAC3BC,MAAOR,KAAKJ,YAAYY,MACxBC,UAAW,CAACnB,EAAOoB,iBAAkB,0BAEjC,IAAIC,EAAYJ,GAASK,WAAmCN,GAUpE,qBAAMQ,GACJ,MAAMP,EAAuB,CAC3BC,MAAOR,KAAKJ,YAAYY,MACxBC,UAAW,CAACnB,EAAOoB,iBAAkB,0BAGjC,IAAIC,EAAYJ,GAASK,WAAW,CACxCG,OAAQC,EAAYC"}
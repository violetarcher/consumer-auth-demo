{"version":3,"file":"transaction-override.js","sources":["../../../../src/screens/signup/transaction-override.ts"],"sourcesContent":["import { ConnectionStrategy, Identifiers } from '../../../src/constants';\nimport { Transaction } from '../../models/transaction';\nimport { isPasskeyEnabled, getUsernamePolicy, getRequiredIdentifiers, getOptionalIdentifiers, getPasswordPolicy } from '../../shared/transaction';\n\nimport type { TransactionContext } from '../../../interfaces/models/transaction';\nimport type { TransactionMembersOnSignup as OverrideOptions } from '../../../interfaces/screens/signup';\n\nexport class TransactionOverride extends Transaction implements OverrideOptions {\n  isPasskeyEnabled: OverrideOptions['isPasskeyEnabled'];\n  usernamePolicy: OverrideOptions['usernamePolicy'];\n  optionalIdentifiers: OverrideOptions['optionalIdentifiers'];\n  requiredIdentifiers: OverrideOptions['requiredIdentifiers'];\n  passwordPolicy: OverrideOptions['passwordPolicy'];\n\n  constructor(transactionContext: TransactionContext) {\n    super(transactionContext);\n    this.isPasskeyEnabled = isPasskeyEnabled(transactionContext);\n    this.usernamePolicy = getUsernamePolicy(transactionContext);\n    this.optionalIdentifiers = getOptionalIdentifiers(transactionContext);\n    this.requiredIdentifiers = TransactionOverride.getRequiredIdentifiers(transactionContext, this.connectionStrategy);\n    this.passwordPolicy = getPasswordPolicy(transactionContext);\n  }\n\n  static getRequiredIdentifiers(transactionContext: TransactionContext, connectionStrategy: string | null): OverrideOptions['requiredIdentifiers'] {\n    if (connectionStrategy === ConnectionStrategy.SMS) return [Identifiers.PHONE];\n    if (connectionStrategy === ConnectionStrategy.EMAIL) return [Identifiers.EMAIL];\n    return getRequiredIdentifiers(transactionContext);\n  }\n}\n"],"names":["TransactionOverride","Transaction","isPasskeyEnabled","usernamePolicy","optionalIdentifiers","requiredIdentifiers","passwordPolicy","constructor","transactionContext","super","this","getUsernamePolicy","getOptionalIdentifiers","getRequiredIdentifiers","connectionStrategy","getPasswordPolicy","ConnectionStrategy","SMS","Identifiers","PHONE","EMAIL"],"mappings":"wWAOM,MAAOA,UAA4BC,EACvCC,iBACAC,eACAC,oBACAC,oBACAC,eAEA,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKR,iBAAmBA,EAAiBM,GACzCE,KAAKP,eAAiBQ,EAAkBH,GACxCE,KAAKN,oBAAsBQ,EAAuBJ,GAClDE,KAAKL,oBAAsBL,EAAoBa,uBAAuBL,EAAoBE,KAAKI,oBAC/FJ,KAAKJ,eAAiBS,EAAkBP,GAG1C,6BAAOK,CAAuBL,EAAwCM,GACpE,OAAIA,IAAuBE,EAAmBC,IAAY,CAACC,EAAYC,OACnEL,IAAuBE,EAAmBI,MAAc,CAACF,EAAYE,OAClEP,EAAuBL"}
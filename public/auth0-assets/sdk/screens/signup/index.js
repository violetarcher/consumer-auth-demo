import{FormActions as t}from"../../constants/form-actions.js";import{ScreenIds as e}from"../../constants/enums.js";import{BaseContext as s}from"../../models/base-context.js";import{FormHandler as n}from"../../utils/form-handler.js";import{ScreenOverride as r}from"./screen-override.js";import{TransactionOverride as a}from"./transaction-override.js";class i extends s{static screenIdentifier=e.SIGNUP;screen;transaction;constructor(){super();const t=this.getContext("screen"),e=this.getContext("transaction");this.screen=new r(t),this.transaction=new a(e)}async signup(t){const e={state:this.transaction.state,telemetry:[i.screenIdentifier,"signup"]};await new n(e).submitData(t)}async federatedSignup(t){const e={state:this.transaction.state,telemetry:[i.screenIdentifier,"federatedSignup"]};await new n(e).submitData(t)}async pickCountryCode(){const e={state:this.transaction.state,telemetry:[i.screenIdentifier,"pickCountryCode"]};await new n(e).submitData({action:t.PICK_COUNTRY_CODE})}}export{i as default};
//# sourceMappingURL=index.js.map

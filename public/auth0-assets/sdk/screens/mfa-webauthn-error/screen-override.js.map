{"version":3,"file":"screen-override.js","sources":["../../../../src/screens/mfa-webauthn-error/screen-override.ts"],"sourcesContent":["import { Screen } from '../../models/screen';\n\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { ScreenMembersOnMfaWebAuthnError as OverrideOptions, WebAuthnType } from '../../../interfaces/screens/mfa-webauthn-error';\n\n/**\n * @class ScreenOverride\n * @extends Screen\n * @description Overrides the base Screen class to provide specific data accessors for the\n * 'mfa-webauthn-error' screen context. It ensures that `errorType` and `webauthnType`\n * are correctly typed and accessible from the screen's data.\n * @implements {OverrideOptions}\n */\nexport class ScreenOverride extends Screen implements OverrideOptions {\n  /**\n   * @property {object | null} data - Screen-specific data.\n   * @property {string} data.errorType - A string code or message describing the WebAuthn error.\n   * @property {WebAuthnType} data.webauthnType - Indicates the type of WebAuthn authenticator involved.\n   */\n  public data: OverrideOptions['data'];\n\n  /**\n   * Initializes a new instance of the `ScreenOverride` class for the 'mfa-webauthn-error' screen.\n   * Parses the screen context to extract and type `errorType` and `webauthnType`.\n   * @param {ScreenContext} screenContext - The screen context provided by Universal Login.\n   */\n  constructor(screenContext: ScreenContext) {\n    super(screenContext);\n    this.data = ScreenOverride.getScreenData(screenContext);\n  }\n\n  /**\n   * @static\n   * @method getScreenData\n   * @description Extracts and transforms the screen-specific data from the provided screen context.\n   * Specifically, it retrieves `errorType` and `webauthnType`.\n   * @param {ScreenContext} screenContext - The screen context containing the raw data.\n   * @returns {OverrideOptions['data']} The structured screen data, or `null` if essential\n   * data (`data.errorType` or `data.webauthnType`) is missing or invalid.\n   */\n  static getScreenData = (screenContext: ScreenContext): OverrideOptions['data'] => {\n    const data = screenContext.data;\n    if (\n      !data ||\n      typeof data.errorType !== 'string' ||\n      (data.webauthnType !== 'webauthn-roaming' && data.webauthnType !== 'webauthn-platform')\n    ) {\n      return null;\n    }\n    return {\n      errorType: data.errorType,\n      webauthnType: data.webauthnType as WebAuthnType,\n    };\n  };\n}"],"names":["ScreenOverride","Screen","data","constructor","screenContext","super","this","getScreenData","static","errorType","webauthnType"],"mappings":"gDAaM,MAAOA,UAAuBC,EAM3BC,KAOP,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKJ,KAAOF,EAAeO,cAAcH,GAY3CI,qBAAwBJ,IACtB,MAAMF,EAAOE,EAAcF,KAC3B,OACGA,GACyB,iBAAnBA,EAAKO,WACW,qBAAtBP,EAAKQ,cAA6D,sBAAtBR,EAAKQ,aAE3C,KAEF,CACLD,UAAWP,EAAKO,UAChBC,aAAcR,EAAKQ,aACpB"}
{"version":3,"file":"index.js","sources":["../../../../src/screens/login-passwordless-sms-otp/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport { ScreenOverride } from './screen-override';\nimport { TransactionOverride } from './transaction-override';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { TransactionContext } from '../../../interfaces/models/transaction';\nimport type {\n  ScreenMembersOnLoginPasswordlessSmsOtp as ScreenOptions,\n  TransactionMembersOnLoginPasswordlessSmsOtp as TransactionOptions,\n  LoginPasswordlessSmsOtpMembers,\n  SubmitOTPOptions,\n} from '../../../interfaces/screens/login-passwordless-sms-otp';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\nexport default class LoginPasswordlessSmsOtp extends BaseContext implements LoginPasswordlessSmsOtpMembers {\n  static screenIdentifier: string = ScreenIds.LOGIN_PASSWORDLESS_SMS_OTP;\n  screen: ScreenOptions;\n  transaction: TransactionOptions;\n\n  constructor() {\n    super();\n\n    const screenContext = this.getContext('screen') as ScreenContext;\n    const transactionContext = this.getContext('transaction') as TransactionContext;\n\n    this.screen = new ScreenOverride(screenContext);\n    this.transaction = new TransactionOverride(transactionContext);\n  }\n\n  /**\n   * @example\n   * import LoginPasswordlessSmsOtp from '@auth0/auth0-acul-js/login-passwordless-sms-otp';\n   * const loginPasswordlessSmsOtp = new LoginPasswordlessSmsOtp();\n   *\n   * loginPasswordlessSmsOtp.submitOTP({\n   *     username: \"test@domain.com\";\n   *     code: \"<string>\";\n   * });\n   */\n  async submitOTP(payload: SubmitOTPOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [LoginPasswordlessSmsOtp.screenIdentifier, 'submitOTP'],\n    };\n    await new FormHandler(options).submitData<SubmitOTPOptions>({ ...payload, action: FormActions.DEFAULT });\n  }\n\n  /**\n   * @example\n   * import LoginPasswordlessSmsOtp from '@auth0/auth0-acul-js/login-passwordless-sms-otp';\n   *\n   * const loginPasswordlessSmsOtp = new LoginPasswordlessSmsOtp();\n   * loginPasswordlessSmsOtp.resendOTP();\n   */\n  async resendOTP(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [LoginPasswordlessSmsOtp.screenIdentifier, 'resendOTP'],\n    };\n\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, action: FormActions.RESEND });\n  }\n}\n\nexport {\n  LoginPasswordlessSmsOtpMembers,\n  SubmitOTPOptions,\n  ScreenOptions as ScreenMembersOnLoginPasswordlessSmsOtp,\n  TransactionOptions as TransactionMembersOnLoginPasswordlessSmsOtp,\n};\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["LoginPasswordlessSmsOtp","BaseContext","static","ScreenIds","LOGIN_PASSWORDLESS_SMS_OTP","screen","transaction","constructor","super","screenContext","this","getContext","transactionContext","ScreenOverride","TransactionOverride","submitOTP","payload","options","state","telemetry","screenIdentifier","FormHandler","submitData","action","FormActions","DEFAULT","resendOTP","RESEND"],"mappings":"8VAkBqB,MAAAA,UAAgCC,EACnDC,wBAAkCC,EAAUC,2BAC5CC,OACAC,YAEA,WAAAC,GACEC,QAEA,MAAMC,EAAgBC,KAAKC,WAAW,UAChCC,EAAqBF,KAAKC,WAAW,eAE3CD,KAAKL,OAAS,IAAIQ,EAAeJ,GACjCC,KAAKJ,YAAc,IAAIQ,EAAoBF,GAa7C,eAAMG,CAAUC,GACd,MAAMC,EAAuB,CAC3BC,MAAOR,KAAKJ,YAAYY,MACxBC,UAAW,CAACnB,EAAwBoB,iBAAkB,oBAElD,IAAIC,EAAYJ,GAASK,WAA6B,IAAKN,EAASO,OAAQC,EAAYC,UAUhG,eAAMC,CAAUV,GACd,MAAMC,EAAuB,CAC3BC,MAAOR,KAAKJ,YAAYY,MACxBC,UAAW,CAACnB,EAAwBoB,iBAAkB,oBAGlD,IAAIC,EAAYJ,GAASK,WAA0B,IAAKN,EAASO,OAAQC,EAAYG"}
{"version":3,"file":"index.js","sources":["../../../../src/screens/mfa-push-list/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { MfaPushListMembers, SelectMfaPushDeviceOptions } from '../../../interfaces/screens/mfa-push-list';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\n/**\n * Class implementing the mfa-push-list screen functionality\n */\nexport default class MfaPushList extends BaseContext implements MfaPushListMembers {\n  static screenIdentifier: string = ScreenIds.MFA_PUSH_LIST;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Selects a registered device from the list to initiate MFA push.\n   *\n   * @param payload The options containing the device index.\n   * @example\n   * ```typescript\n   * import MfaPushList from '@auth0/auth0-acul-js/mfa-push-list';\n   *\n   * const mfaPushList = new MfaPushList();\n   * await mfaPushList.selectMfaPushDevice({ deviceIndex: 0 });\n   * ```\n   */\n  async selectMfaPushDevice(payload: SelectMfaPushDeviceOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [MfaPushList.screenIdentifier, 'selectMfaPushDevice'],\n    };\n\n    const { deviceIndex, ...restPayload } = payload;\n\n    await new FormHandler(options).submitData<Omit<SelectMfaPushDeviceOptions, 'deviceIndex'>>({\n      ...restPayload,\n      action: `selection-action::${deviceIndex}`,\n    });\n  }\n\n  /**\n   * Navigates back to the previous screen.\n   * @param payload Optional custom options to include with the request.\n   * @example\n   * ```typescript\n   * import MfaPushList from '@auth0/auth0-acul-js/mfa-push-list';\n   *\n   * const mfaPushList = new MfaPushList();\n   * await mfaPushList.goBack();\n   * ```\n   */\n  async goBack(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [MfaPushList.screenIdentifier, 'goBack'],\n    };\n\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: FormActions.BACK,\n    });\n  }\n}\n\nexport { MfaPushListMembers, SelectMfaPushDeviceOptions };\n\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["MfaPushList","BaseContext","static","ScreenIds","MFA_PUSH_LIST","constructor","super","selectMfaPushDevice","payload","options","state","this","transaction","telemetry","screenIdentifier","deviceIndex","restPayload","FormHandler","submitData","action","goBack","FormActions","BACK"],"mappings":"wOAWqB,MAAAA,UAAoBC,EACvCC,wBAAkCC,EAAUC,cAE5C,WAAAC,GACEC,QAeF,yBAAMC,CAAoBC,GACxB,MAAMC,EAAuB,CAC3BC,MAAOC,KAAKC,YAAYF,MACxBG,UAAW,CAACb,EAAYc,iBAAkB,yBAGtCC,YAAEA,KAAgBC,GAAgBR,QAElC,IAAIS,EAAYR,GAASS,WAA4D,IACtFF,EACHG,OAAQ,qBAAqBJ,MAejC,YAAMK,CAAOZ,GACX,MAAMC,EAAuB,CAC3BC,MAAOC,KAAKC,YAAYF,MACxBG,UAAW,CAACb,EAAYc,iBAAkB,iBAGtC,IAAIG,EAAYR,GAASS,WAA0B,IACpDV,EACHW,OAAQE,EAAYC"}
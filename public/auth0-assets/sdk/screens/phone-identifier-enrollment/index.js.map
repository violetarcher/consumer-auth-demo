{"version":3,"file":"index.js","sources":["../../../../src/screens/phone-identifier-enrollment/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport { ScreenOverride } from './screen-override';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type {\n  PhoneIdentifierEnrollmentMembers,\n  ScreenMembersOnPhoneIdentifierEnrollment as ScreenOptions,\n  PhoneEnrollmentOptions,\n} from '../../../interfaces/screens/phone-identifier-enrollment';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\nexport default class PhoneIdentifierEnrollment extends BaseContext implements PhoneIdentifierEnrollmentMembers {\n  static screenIdentifier: string = ScreenIds.PHONE_IDENTIFIER_ENROLLMENT;\n  screen: ScreenOptions;\n\n  constructor() {\n    super();\n\n    const screenContext = super.getContext('screen') as ScreenContext;\n\n    this.screen = new ScreenOverride(screenContext);\n  }\n\n  /**\n   * @example\n   * import PhoneIdentifierEnrollment from '@auth0/auth0-acul-js/phone-identifier-enrollment';\n   *\n   * const phoneIdentifierEnrollment = new PhoneIdentifierEnrollment();\n   * phoneIdentifierChallenge.continuePhoneEnrollment({\n   *     type: \"<text' | 'voice>\"\n   * });\n   */\n  async continuePhoneEnrollment(payload: PhoneEnrollmentOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [PhoneIdentifierEnrollment.screenIdentifier, 'continuePhoneEnrollment'],\n    };\n    await new FormHandler(options).submitData<PhoneEnrollmentOptions>(payload);\n  }\n\n  /**\n   * @example\n   * import PhoneIdentifierEnrollment from '@auth0/auth0-acul-js/phone-identifier-enrollment';\n   *\n   * const phoneIdentifierEnrollment = new PhoneIdentifierEnrollment();\n   * phoneIdentifierChallenge.returnToPrevious();\n   */\n  async returnToPrevious(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [PhoneIdentifierEnrollment.screenIdentifier, 'returnToPrevious'],\n    };\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, action: FormActions.BACK });\n  }\n}\n\nexport { PhoneIdentifierEnrollmentMembers, PhoneEnrollmentOptions, ScreenOptions as ScreenMembersOnPhoneIdentifierEnrollment };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["PhoneIdentifierEnrollment","BaseContext","static","ScreenIds","PHONE_IDENTIFIER_ENROLLMENT","screen","constructor","super","screenContext","getContext","this","ScreenOverride","continuePhoneEnrollment","payload","options","state","transaction","telemetry","screenIdentifier","FormHandler","submitData","returnToPrevious","action","FormActions","BACK"],"mappings":"8RAeqB,MAAAA,UAAkCC,EACrDC,wBAAkCC,EAAUC,4BAC5CC,OAEA,WAAAC,GACEC,QAEA,MAAMC,EAAgBD,MAAME,WAAW,UAEvCC,KAAKL,OAAS,IAAIM,EAAeH,GAYnC,6BAAMI,CAAwBC,GAC5B,MAAMC,EAAuB,CAC3BC,MAAOL,KAAKM,YAAYD,MACxBE,UAAW,CAACjB,EAA0BkB,iBAAkB,kCAEpD,IAAIC,EAAYL,GAASM,WAAmCP,GAUpE,sBAAMQ,CAAiBR,GACrB,MAAMC,EAAuB,CAC3BC,MAAOL,KAAKM,YAAYD,MACxBE,UAAW,CAACjB,EAA0BkB,iBAAkB,2BAEpD,IAAIC,EAAYL,GAASM,WAA0B,IAAKP,EAASS,OAAQC,EAAYC"}
{"version":3,"file":"transaction-override.js","sources":["../../../../src/screens/signup-password/transaction-override.ts"],"sourcesContent":["import { ConnectionStrategy, Identifiers } from '../../../src/constants';\nimport { Transaction } from '../../models/transaction';\nimport { isPasskeyEnabled, getPasswordPolicy, getRequiredIdentifiers, getOptionalIdentifiers } from '../../shared/transaction';\n\nimport type { TransactionContext } from '../../../interfaces/models/transaction';\nimport type { TransactionMembersOnSignupPassword as OverrideOptions } from '../../../interfaces/screens/signup-password';\n\nexport class TransactionOverride extends Transaction implements OverrideOptions {\n  isPasskeyEnabled: OverrideOptions['isPasskeyEnabled'];\n  passwordPolicy: OverrideOptions['passwordPolicy'];\n  optionalIdentifiers: OverrideOptions['optionalIdentifiers'];\n  requiredIdentifiers: OverrideOptions['requiredIdentifiers'];\n\n  constructor(transactionContext: TransactionContext) {\n    super(transactionContext);\n    this.isPasskeyEnabled = isPasskeyEnabled(transactionContext);\n    this.passwordPolicy = getPasswordPolicy(transactionContext);\n    this.optionalIdentifiers = getOptionalIdentifiers(transactionContext);\n    this.requiredIdentifiers = TransactionOverride.getRequiredIdentifiers(transactionContext, this.connectionStrategy);\n  }\n\n  static getRequiredIdentifiers(transactionContext: TransactionContext, connectionStrategy: string | null): OverrideOptions['requiredIdentifiers'] {\n    if (connectionStrategy === ConnectionStrategy.SMS) return [Identifiers.PHONE];\n    if (connectionStrategy === ConnectionStrategy.EMAIL) return [Identifiers.EMAIL];\n    return getRequiredIdentifiers(transactionContext);\n  }\n}\n"],"names":["TransactionOverride","Transaction","isPasskeyEnabled","passwordPolicy","optionalIdentifiers","requiredIdentifiers","constructor","transactionContext","super","this","getPasswordPolicy","getOptionalIdentifiers","getRequiredIdentifiers","connectionStrategy","ConnectionStrategy","SMS","Identifiers","PHONE","EMAIL"],"mappings":"iVAOM,MAAOA,UAA4BC,EACvCC,iBACAC,eACAC,oBACAC,oBAEA,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKP,iBAAmBA,EAAiBK,GACzCE,KAAKN,eAAiBO,EAAkBH,GACxCE,KAAKL,oBAAsBO,EAAuBJ,GAClDE,KAAKJ,oBAAsBL,EAAoBY,uBAAuBL,EAAoBE,KAAKI,oBAGjG,6BAAOD,CAAuBL,EAAwCM,GACpE,OAAIA,IAAuBC,EAAmBC,IAAY,CAACC,EAAYC,OACnEJ,IAAuBC,EAAmBI,MAAc,CAACF,EAAYE,OAClEN,EAAuBL"}
import{FormActions as t}from"../../constants/form-actions.js";import{ScreenIds as s}from"../../constants/enums.js";import{BaseContext as e}from"../../models/base-context.js";import{FormHandler as n}from"../../utils/form-handler.js";import{createPasskeyCredentials as r}from"../../utils/passkeys.js";import{ScreenOverride as a}from"./screen-override.js";class o extends e{static screenIdentifier=s.PASSKEY_ENROLLMENT;screen;constructor(){super();const t=this.getContext("screen");this.screen=new a(t)}async continuePasskeyEnrollment(t){const s={state:this.transaction.state,telemetry:[o.screenIdentifier,"continuePasskeyEnrollment"]},e=this.screen.publicKey,a=e&&await r(e);await new n(s).submitData({...t,passkey:JSON.stringify(a)})}async abortPasskeyEnrollment(s){const e={state:this.transaction.state,telemetry:[o.screenIdentifier,"abortPasskeyEnrollment"]};await new n(e).submitData({...s,action:t.ABORT_PASSKEY_ENROLLMENT})}}export{o as default};
//# sourceMappingURL=index.js.map

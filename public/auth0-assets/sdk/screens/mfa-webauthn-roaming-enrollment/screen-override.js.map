{"version":3,"file":"screen-override.js","sources":["../../../../src/screens/mfa-webauthn-roaming-enrollment/screen-override.ts"],"sourcesContent":["import { Screen } from '../../models/screen';\nimport { getPublicKey, getWebAuthnType } from '../../shared/screen';\n\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { ScreenMembersOnMfaWebAuthnRoamingEnrollment as OverrideOptions } from '../../../interfaces/screens/mfa-webauthn-roaming-enrollment';\n/**\n * Screen override class for the mfa-webauthn-roaming-enrollment screen.\n * Provides specific data parsing for this screen.\n */\nexport class ScreenOverride extends Screen implements OverrideOptions {\n  webauthnType: string | null\n  publicKey: OverrideOptions['publicKey'];\n  /**\n   * Creates an instance of ScreenOverride for mfa-webauthn-roaming-enrollment.\n   * @param screenContext The screen context from Universal Login.\n   */\n  constructor(screenContext: ScreenContext) {\n    super(screenContext);\n    this.publicKey = ScreenOverride.getPublicKey(screenContext);\n    this.webauthnType = ScreenOverride.getWebAuthnType(screenContext)\n  }\n\n  static getPublicKey = (screenContext: ScreenContext): OverrideOptions['publicKey'] => {\n    return getPublicKey(screenContext) as OverrideOptions['publicKey'];\n  };\n  \n  /**\n   * Retrieves the WebAuthn type from the screen context.\n   * @param screenContext The screen context containing the data.\n   * @returns The WebAuthn type (e.g., 'roaming') or null if not available.\n   */\n  static getWebAuthnType = (screenContext: ScreenContext): string | null => {\n    return getWebAuthnType(screenContext);\n  };\n}\n"],"names":["ScreenOverride","Screen","webauthnType","publicKey","constructor","screenContext","super","this","getPublicKey","getWebAuthnType","static"],"mappings":"2HASM,MAAOA,UAAuBC,EAClCC,aACAC,UAKA,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKJ,UAAYH,EAAeQ,aAAaH,GAC7CE,KAAKL,aAAeF,EAAeS,gBAAgBJ,GAGrDK,oBAAuBL,GACdG,EAAaH,GAQtBK,uBAA0BL,GACjBI,EAAgBJ"}
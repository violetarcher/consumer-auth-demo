import{FormActions as t}from"../../constants/form-actions.js";import{ScreenIds as e}from"../../constants/enums.js";import{BaseContext as s}from"../../models/base-context.js";import{FormHandler as r}from"../../utils/form-handler.js";import{createPasskeyCredentials as n}from"../../utils/passkeys.js";import{ScreenOverride as o}from"./screen-override.js";class i extends s{static screenIdentifier=e.MFA_WEBAUTHN_ROAMING_ENROLLMENT;screen;constructor(){super();const t=this.getContext("screen");this.screen=new o(t)}async enroll(e){const s={state:this.transaction.state,telemetry:[i.screenIdentifier,"enroll"]},o=this.screen.publicKey,a=o&&await n(o);await new r(s).submitData({...e,response:JSON.stringify(a),action:t.DEFAULT})}async showError(t){const e={state:this.transaction.state,telemetry:[i.screenIdentifier,"showError"]},s=`showError::${JSON.stringify(t.error)}`;await new r(e).submitData({...t,action:s,response:""})}async tryAnotherMethod(e){const s={state:this.transaction.state,telemetry:[i.screenIdentifier,"tryAnotherMethod"]};await new r(s).submitData({...e,action:t.PICK_AUTHENTICATOR})}}export{i as default};
//# sourceMappingURL=index.js.map

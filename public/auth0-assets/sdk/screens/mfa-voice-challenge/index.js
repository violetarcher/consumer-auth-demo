import{FormActions as t}from"../../constants/form-actions.js";import{BaseContext as e}from"../../models/base-context.js";import{FormHandler as s}from"../../utils/form-handler.js";import{ScreenOverride as n}from"./screen-override.js";import{UntrustedDataOverride as a}from"./untrusted-data-overrider.js";class r extends e{screen;untrustedData;constructor(){super();const t=this.getContext("screen"),e=this.getContext("untrusted_data");this.screen=new n(t),this.untrustedData=new a(e)}async continue(e){const n={state:this.transaction.state,telemetry:[r.screenIdentifier,"default"]},{rememberDevice:a,...i}=e||{},o={...i,action:t.DEFAULT};a&&(o.rememberBrowser=!0),await new s(n).submitData(o)}async pickPhone(e){const n={state:this.transaction.state,telemetry:[r.screenIdentifier,"pickPhone"]};await new s(n).submitData({...e,action:t.PICK_PHONE})}async switchToSms(e){const n={state:this.transaction.state,telemetry:[r.screenIdentifier,"switchToSms"]};await new s(n).submitData({...e,action:t.SWITCH_TO_SMS})}async resendCode(e){const n={state:this.transaction.state,telemetry:[r.screenIdentifier,"resendCode"]};await new s(n).submitData({...e,action:t.RESEND_CODE})}async tryAnotherMethod(e){const n={state:this.transaction.state,telemetry:[r.screenIdentifier,"pickAuthenticator"]};await new s(n).submitData({...e,action:t.PICK_AUTHENTICATOR})}}export{r as default};
//# sourceMappingURL=index.js.map

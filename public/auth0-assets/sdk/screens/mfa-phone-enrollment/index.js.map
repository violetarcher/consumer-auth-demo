{"version":3,"file":"index.js","sources":["../../../../src/screens/mfa-phone-enrollment/index.ts"],"sourcesContent":["import { ScreenIds } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { MfaPhoneEnrollmentMembers, ContinueOptions } from '../../../interfaces/screens/mfa-phone-enrollment';\n\n/**\n * Class implementing the mfa-phone-enrollment screen functionality.\n * This screen allows users to enroll using a phone number for MFA.\n */\nexport default class MfaPhoneEnrollment extends BaseContext implements MfaPhoneEnrollmentMembers {\n  static screenIdentifier: string = ScreenIds.MFA_PHONE_ENROLLMENT;\n\n  /**\n   * Creates an instance of the MfaPhoneEnrollment screen.\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Navigates to the country code selection screen.\n   * @param payload Optional custom options to include with the request.\n   * @example\n   * ```typescript\n   * import MfaPhoneEnrollment from '@auth0/auth0-acul-js/mfa-phone-enrollment';\n   * const mfaPhoneEnrollmentManager = new MfaPhoneEnrollment();\n   * async function handlePickCountryCode() {\n   *  try {\n   *    await mfaPhoneEnrollmentManager.pickCountryCode();\n   *    console.log('Country code selection successful.');\n   *  } catch (error) {\n   *    console.error('Error selecting country code:', error);\n   *  }\n   * }\n   */\n  async pickCountryCode(payload?: CustomOptions): Promise<void> {\n    const options = {\n      state: this.transaction.state,\n      telemetry: [MfaPhoneEnrollment.screenIdentifier, 'pickCountryCode'],\n    };\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: 'pick-country-code',\n    });\n  }\n\n  /**\n   * Continues the enrollment process with the provided phone number and type (SMS or voice).\n   * @param payload The phone number and type (SMS or voice).\n   * @example\n   * ```typescript\n   * import MfaPhoneEnrollment from '@auth0/auth0-acul-js/mfa-phone-enrollment';\n   * const mfaPhoneEnrollmentManager = new MfaPhoneEnrollment();\n   * async function handleContinueEnrollment() {\n   *  try {\n   *    await mfaPhoneEnrollmentManager.continueEnrollment({\n   *      phone: '+1234567890',\n   *      type: 'sms', // or 'voice'\n   *    });\n   *    console.log('Phone enrollment continued successfully.');\n   *  } catch (error) {\n   *    console.error('Error continuing phone enrollment:', error);\n   *  }\n   * }\n   * ```\n   */\n  async continueEnrollment(payload: ContinueOptions): Promise<void> {\n    const options = {\n      state: this.transaction.state,\n      telemetry: [MfaPhoneEnrollment.screenIdentifier, 'continueEnrollment'],\n    };\n    await new FormHandler(options).submitData({\n      ...payload,\n      action: 'default',\n    });\n  }\n\n  /**\n   * Allows the user to try another MFA method.\n   * @param payload Optional custom options to include with the request.\n   * @example\n   * ```typescript\n   * import MfaPhoneEnrollment from '@auth0/auth0-acul-js/mfa-phone-enrollment';\n   * const mfaPhoneEnrollmentManager = new MfaPhoneEnrollment();\n   * async function handleTryAnotherMethod() {\n   *  try {\n   *    await mfaPhoneEnrollmentManager.tryAnotherMethod(); \n   *    console.log('Switched to another authentication method.');\n   *   } catch (error) { \n   *  console.error('Error switching authenticator method:', error);\n   *  }\n   * }\n   * ```\n   */\n  async tryAnotherMethod(payload?: CustomOptions): Promise<void> {\n    const options = {\n      state: this.transaction.state,\n      telemetry: [MfaPhoneEnrollment.screenIdentifier, 'tryAnotherMethod'],\n    };\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: 'pick-authenticator',\n    });\n  }\n}\n\nexport { MfaPhoneEnrollmentMembers, ContinueOptions };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["MfaPhoneEnrollment","BaseContext","static","ScreenIds","MFA_PHONE_ENROLLMENT","constructor","super","pickCountryCode","payload","options","state","this","transaction","telemetry","screenIdentifier","FormHandler","submitData","action","continueEnrollment","tryAnotherMethod"],"mappings":"0KAWqB,MAAAA,UAA2BC,EAC9CC,wBAAkCC,EAAUC,qBAK5C,WAAAC,GACEC,QAmBF,qBAAMC,CAAgBC,GACpB,MAAMC,EAAU,CACdC,MAAOC,KAAKC,YAAYF,MACxBG,UAAW,CAACb,EAAmBc,iBAAkB,0BAE7C,IAAIC,EAAYN,GAASO,WAA0B,IACpDR,EACHS,OAAQ,sBAwBZ,wBAAMC,CAAmBV,GACvB,MAAMC,EAAU,CACdC,MAAOC,KAAKC,YAAYF,MACxBG,UAAW,CAACb,EAAmBc,iBAAkB,6BAE7C,IAAIC,EAAYN,GAASO,WAAW,IACrCR,EACHS,OAAQ,YAqBZ,sBAAME,CAAiBX,GACrB,MAAMC,EAAU,CACdC,MAAOC,KAAKC,YAAYF,MACxBG,UAAW,CAACb,EAAmBc,iBAAkB,2BAE7C,IAAIC,EAAYN,GAASO,WAA0B,IACpDR,EACHS,OAAQ"}
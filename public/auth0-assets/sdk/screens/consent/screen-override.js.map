{"version":3,"file":"screen-override.js","sources":["../../../../src/screens/consent/screen-override.ts"],"sourcesContent":["import { Screen } from '../../models/screen';\nimport { getScopes } from '../../shared/screen';\n\nimport type { Scope, ScreenContext } from '../../../interfaces/models/screen';\nimport type { ScreenMembersOnConsent } from '../../../interfaces/screens/consent';\n\n/**\n * @class ScreenOverride\n * @extends Screen\n * @implements ScreenMembersOnConsent\n * @description Screen-specific override for the Consent screen ('consent').\n * This class ensures that the `screen.data` object, particularly the `scopes` array\n * and `hideScopes` flag, are correctly parsed and typed according to the {@link ScreenMembersOnConsent} interface.\n */\nexport class ScreenOverride extends Screen implements ScreenMembersOnConsent {\n  \n    scopes: Scope[];\n    hideScopes: boolean;\n\n  constructor(screenContext: ScreenContext) {\n    super(screenContext); \n    this.scopes = ScreenOverride.getScopes(screenContext)\n    this.hideScopes = ScreenOverride.getHideScopes(screenContext)\n  }\n\n    static getScopes = (screenContext: ScreenContext): Scope[] => {\n      return getScopes(screenContext)\n    };\n\n    static getHideScopes = (screenContext: ScreenContext): boolean => {\n      return !!screenContext.data?.hideScopes\n    }\n}"],"names":["ScreenOverride","Screen","scopes","hideScopes","constructor","screenContext","super","this","getScopes","getHideScopes","static","data"],"mappings":"mGAcM,MAAOA,UAAuBC,EAEhCC,OACAC,WAEF,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKL,OAASF,EAAeQ,UAAUH,GACvCE,KAAKJ,WAAaH,EAAeS,cAAcJ,GAG/CK,iBAAoBL,GACXG,EAAUH,GAGnBK,qBAAwBL,KACbA,EAAcM,MAAMR"}
import{FormActions as t}from"../../constants/form-actions.js";import{ScreenIds as e}from"../../constants/enums.js";import{BaseContext as r}from"../../models/base-context.js";import{FormHandler as s}from"../../utils/form-handler.js";class n extends r{static screenIdentifier=e.MFA_RECOVERY_CODE_CHALLENGE;constructor(){super()}async continue(e){if(!e||!e?.code)return Promise.reject(new Error("The recovery code is required."));const r={state:this.transaction.state,telemetry:[n.screenIdentifier,"continue"]};await new s(r).submitData({...e,action:t.DEFAULT})}async tryAnotherMethod(e){const r={state:this.transaction.state,telemetry:[n.screenIdentifier,"tryAnotherMethod"]};await new s(r).submitData({...e,action:t.PICK_AUTHENTICATOR})}}export{n as default};
//# sourceMappingURL=index.js.map

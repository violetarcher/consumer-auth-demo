{"version":3,"file":"index.js","sources":["../../../../src/screens/login-passwordless-email-code/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport { ScreenOverride } from './screen-override';\nimport { TransactionOverride } from './transaction-override';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { TransactionContext } from '../../../interfaces/models/transaction';\nimport type {\n  LoginPasswordlessEmailCodeMembers,\n  ScreenMembersOnLoginPasswordlessEmailCode as ScreenOptions,\n  TransactionMembersOnLoginPasswordlessEmailCode as TransactionOptions,\n  SubmitCodeOptions,\n} from '../../../interfaces/screens/login-passwordless-email-code';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\nexport default class LoginPasswordlessEmailCode extends BaseContext implements LoginPasswordlessEmailCodeMembers {\n  static screenIdentifier: string = ScreenIds.LOGIN_PASSWORDLESS_EMAIL_CODE;\n  screen: ScreenOptions;\n  transaction: TransactionOptions;\n\n  constructor() {\n    super();\n\n    const screenContext = this.getContext('screen') as ScreenContext;\n    const transactionContext = this.getContext('transaction') as TransactionContext;\n\n    this.screen = new ScreenOverride(screenContext);\n    this.transaction = new TransactionOverride(transactionContext);\n  }\n\n  /**\n   * @example\n   * //Creates an instance of LoginPasswordlessEmailCode and calls the method with sample data.\n   * import LoginPasswordlessEmailCode from '@auth0/auth0-acul-js/login-passwordless-email-code';\n   *\n   * //Method to continue the login process using email and code.\n   * const loginPasswordlessEmailCode = new LoginPasswordlessEmailCode();\n   * loginPasswordlessEmailCode.submitCode({\n   *  email: \"test@domain.com\";\n   *  code: \"<string>\";\n   * });\n   */\n  async submitCode(payload: SubmitCodeOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [LoginPasswordlessEmailCode.screenIdentifier, 'submitCode'],\n    };\n\n    await new FormHandler(options).submitData<SubmitCodeOptions>(payload);\n  }\n\n  /**\n   * @example\n   * import LoginPasswordlessEmailCode from '@auth0/auth0-acul-js/login-passwordless-email-code';\n   *\n   * const loginPasswordlessEmailCode = new LoginPasswordlessEmailCode();\n   * loginPasswordlessEmailCode.resendCode();\n   */\n  async resendCode(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [LoginPasswordlessEmailCode.screenIdentifier, 'resendCode'],\n    };\n\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, action: FormActions.RESEND });\n  }\n}\n\nexport {\n  LoginPasswordlessEmailCodeMembers,\n  SubmitCodeOptions,\n  ScreenOptions as ScreenMembersOnLoginPasswordlessEmailCode,\n  TransactionOptions as TransactionMembersOnLoginPasswordlessEmailCode,\n};\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["LoginPasswordlessEmailCode","BaseContext","static","ScreenIds","LOGIN_PASSWORDLESS_EMAIL_CODE","screen","transaction","constructor","super","screenContext","this","getContext","transactionContext","ScreenOverride","TransactionOverride","submitCode","payload","options","state","telemetry","screenIdentifier","FormHandler","submitData","resendCode","action","FormActions","RESEND"],"mappings":"8VAkBqB,MAAAA,UAAmCC,EACtDC,wBAAkCC,EAAUC,8BAC5CC,OACAC,YAEA,WAAAC,GACEC,QAEA,MAAMC,EAAgBC,KAAKC,WAAW,UAChCC,EAAqBF,KAAKC,WAAW,eAE3CD,KAAKL,OAAS,IAAIQ,EAAeJ,GACjCC,KAAKJ,YAAc,IAAIQ,EAAoBF,GAe7C,gBAAMG,CAAWC,GACf,MAAMC,EAAuB,CAC3BC,MAAOR,KAAKJ,YAAYY,MACxBC,UAAW,CAACnB,EAA2BoB,iBAAkB,qBAGrD,IAAIC,EAAYJ,GAASK,WAA8BN,GAU/D,gBAAMO,CAAWP,GACf,MAAMC,EAAuB,CAC3BC,MAAOR,KAAKJ,YAAYY,MACxBC,UAAW,CAACnB,EAA2BoB,iBAAkB,qBAGrD,IAAIC,EAAYJ,GAASK,WAA0B,IAAKN,EAASQ,OAAQC,EAAYC"}
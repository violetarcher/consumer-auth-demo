{"version":3,"file":"index.js","sources":["../../../../src/screens/organization-selection/index.ts"],"sourcesContent":["import { FormActions } from '../../../src/constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type {\n  OrganizationSelectionMembers,\n  ContinueWithOrganizationNameOptions,\n  ScreenMembersOnOrganizationSelection as ScreenOptions,\n} from '../../../interfaces/screens/organization-selection';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\n/**\n * Class implementing the organization-selection screen functionality.\n * This screen allows users to select an organization to continue with.\n */\nexport default class OrganizationSelection extends BaseContext implements OrganizationSelectionMembers {\n  screen: ScreenOptions;\n\n  /**\n   * Creates an instance of OrganizationSelection screen manager.\n   */\n  constructor() {\n    super();\n    const screenContext = this.getContext('screen') as ScreenContext;\n    this.screen = screenContext as ScreenOptions;\n  }\n\n  /**\n   * Continues with the selected organization name.\n   * @param payload The options containing the organization name.\n   * @example\n   * ```typescript\n   * import OrganizationSelection from '@auth0/auth0-acul-js/organization-selection';\n   *\n   * const organizationSelection = new OrganizationSelection();\n   * await organizationSelection.continueWithOrganizationName({\n   *   organizationName: 'testOrganizationName',\n   * });\n   * ```\n   */\n  async continueWithOrganizationName(payload: ContinueWithOrganizationNameOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [OrganizationSelection.screenIdentifier, 'continueWithOrganizationName'],\n    };\n    await new FormHandler(options).submitData<ContinueWithOrganizationNameOptions>({\n      ...payload,\n      action: FormActions.DEFAULT,\n    });\n  }\n}\n\nexport { OrganizationSelectionMembers, ContinueWithOrganizationNameOptions, ScreenOptions as ScreenMembersOnOrganizationSelection };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["OrganizationSelection","BaseContext","screen","constructor","super","screenContext","this","getContext","continueWithOrganizationName","payload","options","state","transaction","telemetry","screenIdentifier","FormHandler","submitData","action","FormActions","DEFAULT"],"mappings":"mLAgBqB,MAAAA,UAA8BC,EACjDC,OAKA,WAAAC,GACEC,QACA,MAAMC,EAAgBC,KAAKC,WAAW,UACtCD,KAAKJ,OAASG,EAgBhB,kCAAMG,CAA6BC,GACjC,MAAMC,EAAuB,CAC3BC,MAAOL,KAAKM,YAAYD,MACxBE,UAAW,CAACb,EAAsBc,iBAAkB,uCAEhD,IAAIC,EAAYL,GAASM,WAAgD,IAC1EP,EACHQ,OAAQC,EAAYC"}
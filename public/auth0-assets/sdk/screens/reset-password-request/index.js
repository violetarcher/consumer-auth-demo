import{FormActions as t}from"../../constants/form-actions.js";import{ScreenIds as e}from"../../constants/enums.js";import{BaseContext as s}from"../../models/base-context.js";import{FormHandler as n}from"../../utils/form-handler.js";import{ScreenOverride as r}from"./screen-override.js";import{TransactionOverride as a}from"./transaction-override.js";class o extends s{static screenIdentifier=e.RESET_PASSWORD_REQUEST;screen;transaction;constructor(){super();const t=this.getContext("screen"),e=this.getContext("transaction");this.screen=new r(t),this.transaction=new a(e)}async resetPassword(t){const e={state:this.transaction.state,telemetry:[o.screenIdentifier,"resetPassword"]},s=function(t,e){if(e)return t;{const{username:e,...s}=t;return{...s,email:t.username}}}(t,this.transaction.hasFlexibleIdentifier);await new n(e).submitData(s)}async backToLogin(e){const s={state:this.transaction.state,telemetry:[o.screenIdentifier,"backToLogin"]};await new n(s).submitData({...e,action:t.BACK_TO_LOGIN})}}export{o as default};
//# sourceMappingURL=index.js.map

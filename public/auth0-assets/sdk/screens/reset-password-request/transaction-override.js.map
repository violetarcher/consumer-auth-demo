{"version":3,"file":"transaction-override.js","sources":["../../../../src/screens/reset-password-request/transaction-override.ts"],"sourcesContent":["import { ConnectionStrategy, Identifiers } from '../../../src/constants';\nimport { Transaction } from '../../../src/models/transaction';\nimport { getAllowedIdentifiers, getRequiredIdentifiers, hasFlexibleIdentifier } from '../../shared/transaction';\n\nimport type { TransactionContext } from '../../../interfaces/models/transaction';\nimport type { TransactionMembersOnResetPasswordRequest as OverrideMembers } from '../../../interfaces/screens/reset-password-request';\n\nexport class TransactionOverride extends Transaction implements OverrideMembers {\n  allowedIdentifiers: OverrideMembers['allowedIdentifiers'];\n  requiredIdentifiers: OverrideMembers['requiredIdentifiers'];\n  hasFlexibleIdentifier: OverrideMembers['hasFlexibleIdentifier'];\n\n  constructor(transactionContext: TransactionContext) {\n    super(transactionContext);\n    this.allowedIdentifiers = TransactionOverride.getAllowedIdentifiers(transactionContext, this.connectionStrategy);\n    this.requiredIdentifiers = TransactionOverride.getRequiredIdentifiers(transactionContext, this.connectionStrategy);\n    this.hasFlexibleIdentifier = hasFlexibleIdentifier(transactionContext);\n  }\n\n  static getAllowedIdentifiers(transactionContext: TransactionContext, connectionStrategy: string | null): OverrideMembers['allowedIdentifiers'] {\n    if (connectionStrategy === ConnectionStrategy.SMS) return [Identifiers.PHONE];\n    if (connectionStrategy === ConnectionStrategy.EMAIL) return [Identifiers.EMAIL];\n    return getAllowedIdentifiers(transactionContext);\n  }\n\n  static getRequiredIdentifiers(transactionContext: TransactionContext, connectionStrategy: string | null): OverrideMembers['requiredIdentifiers'] {\n    if (connectionStrategy === ConnectionStrategy.SMS) return [Identifiers.PHONE];\n    if (connectionStrategy === ConnectionStrategy.EMAIL) return [Identifiers.EMAIL];\n    return getRequiredIdentifiers(transactionContext);\n  }\n}\n"],"names":["TransactionOverride","Transaction","allowedIdentifiers","requiredIdentifiers","hasFlexibleIdentifier","constructor","transactionContext","super","this","getAllowedIdentifiers","connectionStrategy","getRequiredIdentifiers","ConnectionStrategy","SMS","Identifiers","PHONE","EMAIL"],"mappings":"8TAOM,MAAOA,UAA4BC,EACvCC,mBACAC,oBACAC,sBAEA,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKN,mBAAqBF,EAAoBS,sBAAsBH,EAAoBE,KAAKE,oBAC7FF,KAAKL,oBAAsBH,EAAoBW,uBAAuBL,EAAoBE,KAAKE,oBAC/FF,KAAKJ,sBAAwBA,EAAsBE,GAGrD,4BAAOG,CAAsBH,EAAwCI,GACnE,OAAIA,IAAuBE,EAAmBC,IAAY,CAACC,EAAYC,OACnEL,IAAuBE,EAAmBI,MAAc,CAACF,EAAYE,OAClEP,EAAsBH,GAG/B,6BAAOK,CAAuBL,EAAwCI,GACpE,OAAIA,IAAuBE,EAAmBC,IAAY,CAACC,EAAYC,OACnEL,IAAuBE,EAAmBI,MAAc,CAACF,EAAYE,OAClEL,EAAuBL"}
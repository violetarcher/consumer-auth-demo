{"version":3,"file":"index.js","sources":["../../../../src/screens/reset-password-request/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport { ScreenOverride } from './screen-override';\nimport { TransactionOverride } from './transaction-override';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { TransactionContext } from '../../../interfaces/models/transaction';\nimport type {\n  ResetPasswordRequestOptions,\n  ResetPasswordRequestMembers,\n  ScreenMembersOnResetPasswordRequest as ScreenOptions,\n  TransactionMembersOnResetPasswordRequest as TransactionOptions,\n} from '../../../interfaces/screens/reset-password-request';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\nexport default class ResetPasswordRequest extends BaseContext implements ResetPasswordRequestMembers {\n  static screenIdentifier: string = ScreenIds.RESET_PASSWORD_REQUEST;\n  screen: ScreenOptions;\n  transaction: TransactionOptions;\n\n  constructor() {\n    super();\n    const screenContext = this.getContext('screen') as ScreenContext;\n    const transactionContext = this.getContext('transaction') as TransactionContext;\n    this.screen = new ScreenOverride(screenContext);\n    this.transaction = new TransactionOverride(transactionContext);\n  }\n\n  /**\n   * @example\n   * import ResetPasswordRequest from '@auth0/auth0-acul-js/reset-password-request';\n   *\n   * const resetPasswordRequest = new ResetPasswordRequest();\n   * resetPasswordRequest.resetPassword({ username: 'testuser' });\n   */\n  async resetPassword(payload: ResetPasswordRequestOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [ResetPasswordRequest.screenIdentifier, 'resetPassword'],\n    };\n    const updatedPayload = updatePayloadByIdentifier(payload, this.transaction.hasFlexibleIdentifier);\n    await new FormHandler(options).submitData(updatedPayload);\n  }\n\n  /**\n   * @example\n   * import ResetPasswordRequest from '@auth0/auth0-acul-js/reset-password-request';\n   *\n   * const resetPasswordRequest = new ResetPasswordRequest();\n   * resetPasswordRequest.backToLogin();\n   */\n  async backToLogin(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [ResetPasswordRequest.screenIdentifier, 'backToLogin'],\n    };\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, action: FormActions.BACK_TO_LOGIN });\n  }\n}\n\n/**\n * @private\n */\nfunction updatePayloadByIdentifier(\n  payload: ResetPasswordRequestOptions,\n  isFlexibleIdentifier: boolean,\n): ResetPasswordRequestOptions | { email: string } {\n  if (!isFlexibleIdentifier) {\n    // eslint-disable-next-line\n    const { username, ...rest } = payload;\n    return {\n      ...rest,\n      email: payload.username,\n    };\n  } else {\n    return payload;\n  }\n}\n\nexport {\n  ResetPasswordRequestMembers,\n  ResetPasswordRequestOptions,\n  ScreenOptions as ScreenMembersOnResetPasswordRequest,\n  TransactionOptions as TransactionMembersOnResetPasswordRequest,\n};\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["ResetPasswordRequest","BaseContext","static","ScreenIds","RESET_PASSWORD_REQUEST","screen","transaction","constructor","super","screenContext","this","getContext","transactionContext","ScreenOverride","TransactionOverride","resetPassword","payload","options","state","telemetry","screenIdentifier","updatedPayload","isFlexibleIdentifier","username","rest","email","updatePayloadByIdentifier","hasFlexibleIdentifier","FormHandler","submitData","backToLogin","action","FormActions","BACK_TO_LOGIN"],"mappings":"8VAkBqB,MAAAA,UAA6BC,EAChDC,wBAAkCC,EAAUC,uBAC5CC,OACAC,YAEA,WAAAC,GACEC,QACA,MAAMC,EAAgBC,KAAKC,WAAW,UAChCC,EAAqBF,KAAKC,WAAW,eAC3CD,KAAKL,OAAS,IAAIQ,EAAeJ,GACjCC,KAAKJ,YAAc,IAAIQ,EAAoBF,GAU7C,mBAAMG,CAAcC,GAClB,MAAMC,EAAuB,CAC3BC,MAAOR,KAAKJ,YAAYY,MACxBC,UAAW,CAACnB,EAAqBoB,iBAAkB,kBAE/CC,EAuBV,SACEL,EACAM,GAEA,GAAKA,EAQH,OAAON,EARkB,CAEzB,MAAMO,SAAEA,KAAaC,GAASR,EAC9B,MAAO,IACFQ,EACHC,MAAOT,EAAQO,UAKrB,CArC2BG,CAA0BV,EAASN,KAAKJ,YAAYqB,6BACrE,IAAIC,EAAYX,GAASY,WAAWR,GAU5C,iBAAMS,CAAYd,GAChB,MAAMC,EAAuB,CAC3BC,MAAOR,KAAKJ,YAAYY,MACxBC,UAAW,CAACnB,EAAqBoB,iBAAkB,sBAE/C,IAAIQ,EAAYX,GAASY,WAA0B,IAAKb,EAASe,OAAQC,EAAYC"}
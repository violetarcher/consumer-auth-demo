{"version":3,"file":"index.js","sources":["../../../../src/screens/redeem-ticket/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { RedeemTicketMembers } from '../../../interfaces/screens/redeem-ticket';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\n/**\n * Implements the redeem-ticket screen functionality.\n */\nexport default class RedeemTicket extends BaseContext implements RedeemTicketMembers {\n  static screenIdentifier: string = ScreenIds.REDEEM_TICKET;\n\n  /**\n   * Initializes a new instance of the RedeemTicket class.\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Performs the default action on the redeem-ticket screen, usually continuing the flow.\n   *\n   * @param payload - Optional custom options to include with the request.\n   * @returns A promise that resolves when the action is complete.\n   * @throws {Error} If the operation fails.\n   *\n   * @example\n   * ```ts\n   * import RedeemTicket from '@auth0/auth0-acul-js/redeem-ticket';\n   *\n   * const redeemTicket = new RedeemTicket();\n   * await redeemTicket.continue();\n   * ```\n   */\n  async continue(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [RedeemTicket.screenIdentifier, 'continue'],\n    };\n\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: FormActions.DEFAULT,\n    });\n  }\n}\n\nexport { RedeemTicketMembers };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["RedeemTicket","BaseContext","static","ScreenIds","REDEEM_TICKET","constructor","super","payload","options","state","this","transaction","telemetry","screenIdentifier","FormHandler","submitData","action","FormActions","DEFAULT"],"mappings":"wOAWqB,MAAAA,UAAqBC,EACxCC,wBAAkCC,EAAUC,cAK5C,WAAAC,GACEC,QAkBF,cAAM,CAASC,GACb,MAAMC,EAAuB,CAC3BC,MAAOC,KAAKC,YAAYF,MACxBG,UAAW,CAACZ,EAAaa,iBAAkB,mBAGvC,IAAIC,EAAYN,GAASO,WAA0B,IACpDR,EACHS,OAAQC,EAAYC"}
{"version":3,"file":"index.js","sources":["../../../../src/screens/phone-identifier-challenge/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport { ScreenOverride } from './screen-override';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type {\n  PhoneChallengeOptions,\n  ScreenMembersOnPhoneIdentifierChallenge as ScreenOptions,\n  PhoneIdentifierChallengeMembers,\n} from '../../../interfaces/screens/phone-identifier-challenge';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\nexport default class PhoneIdentifierChallenge extends BaseContext implements PhoneIdentifierChallengeMembers {\n  static screenIdentifier: string = ScreenIds.PHONE_IDENTIFIER_CHALLENGE;\n  screen: ScreenOptions;\n\n  constructor() {\n    super();\n\n    const screenContext = this.getContext('screen') as ScreenContext;\n    this.screen = new ScreenOverride(screenContext);\n  }\n\n  /**\n   * @example\n   * import PhoneIdentifierChallenge from '@auth0/auth0-acul-js/phone-identifier-challenge';\n   *\n   * const phoneIdentifierChallenge = new PhoneIdentifierChallenge();\n   * phoneIdentifierChallenge.submitPhoneChallenge({\n   *     code: \"<string>\"\n   * });\n   */\n  async submitPhoneChallenge(payload: PhoneChallengeOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [PhoneIdentifierChallenge.screenIdentifier, 'submitPhoneChallenge'],\n    };\n    await new FormHandler(options).submitData<PhoneChallengeOptions>(payload);\n  }\n\n  /**\n   * @example\n   * import PhoneIdentifierChallenge from '@auth0/auth0-acul-js/phone-identifier-challenge';\n   *\n   * const phoneIdentifierChallenge = new PhoneIdentifierChallenge();\n   * phoneIdentifierChallenge.resendCode();\n   */\n  async resendCode(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [PhoneIdentifierChallenge.screenIdentifier, 'resendCode'],\n    };\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, action: FormActions.RESEND_CODE });\n  }\n\n  /**\n   * @example\n   * import PhoneIdentifierChallenge from '@auth0/auth0-acul-js/phone-identifier-challenge';\n   *\n   * const phoneIdentifierChallenge = new PhoneIdentifierChallenge();\n   * phoneIdentifierChallenge.returnToPrevious();\n   */\n  async returnToPrevious(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [PhoneIdentifierChallenge.screenIdentifier, 'returnToPrevious'],\n    };\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, action: FormActions.BACK });\n  }\n}\n\nexport { PhoneIdentifierChallengeMembers, PhoneChallengeOptions, ScreenOptions as ScreenMembersOnPhoneIdentifierChallenge };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["PhoneIdentifierChallenge","BaseContext","static","ScreenIds","PHONE_IDENTIFIER_CHALLENGE","screen","constructor","super","screenContext","this","getContext","ScreenOverride","submitPhoneChallenge","payload","options","state","transaction","telemetry","screenIdentifier","FormHandler","submitData","resendCode","action","FormActions","RESEND_CODE","returnToPrevious","BACK"],"mappings":"8RAeqB,MAAAA,UAAiCC,EACpDC,wBAAkCC,EAAUC,2BAC5CC,OAEA,WAAAC,GACEC,QAEA,MAAMC,EAAgBC,KAAKC,WAAW,UACtCD,KAAKJ,OAAS,IAAIM,EAAeH,GAYnC,0BAAMI,CAAqBC,GACzB,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACjB,EAAyBkB,iBAAkB,+BAEnD,IAAIC,EAAYL,GAASM,WAAkCP,GAUnE,gBAAMQ,CAAWR,GACf,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACjB,EAAyBkB,iBAAkB,qBAEnD,IAAIC,EAAYL,GAASM,WAA0B,IAAKP,EAASS,OAAQC,EAAYC,cAU7F,sBAAMC,CAAiBZ,GACrB,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACjB,EAAyBkB,iBAAkB,2BAEnD,IAAIC,EAAYL,GAASM,WAA0B,IAAKP,EAASS,OAAQC,EAAYG"}
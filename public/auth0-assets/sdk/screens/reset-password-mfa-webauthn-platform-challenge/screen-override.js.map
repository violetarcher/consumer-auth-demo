{"version":3,"file":"screen-override.js","sources":["../../../../src/screens/reset-password-mfa-webauthn-platform-challenge/screen-override.ts"],"sourcesContent":["import { Screen } from '../../models/screen';\nimport { getPublicKey, getShowRememberDevice } from '../../shared/screen';\n\nimport type { PasskeyRead, ScreenContext } from '../../../interfaces/models/screen';\nimport type { ScreenMembersOnResetPasswordMfaWebAuthnPlatformChallenge as OverrideOptions } from '../../../interfaces/screens/reset-password-mfa-webauthn-platform-challenge';\n\n/**\n * @class ScreenOverride\n * @extends Screen\n * @implements OverrideOptions\n * @description Screen-specific override for the 'reset-password-mfa-webauthn-platform-challenge' screen.\n * This class provides correctly typed accessors for screen-specific data:\n * - `publicKey`: The WebAuthn challenge options from `screen.data.passkey.public_key`.\n * - `showRememberDevice`: A boolean indicating if the \"Remember this device\" option should be displayed.\n */\nexport class ScreenOverride extends Screen implements OverrideOptions {\n  /**\n   * The public key credential request options (challenge) required for `navigator.credentials.get()`.\n   * Extracted from `screenContext.data.passkey.public_key`.\n   * Will be `null` if the necessary data is not present in the context.\n   * @type {PasskeyRead['public_key'] | null}\n   * @public\n   */\n  public publicKey: OverrideOptions['publicKey'];\n\n  /**\n   * Flag indicating whether the \"Remember this device\" UI option should be displayed.\n   * Parsed from `screenContext.data.show_remember_device`. Defaults to `false` if not specified.\n   * @type {boolean}\n   * @public\n   */\n  public showRememberDevice: OverrideOptions['showRememberDevice'];\n\n  /**\n   * Creates an instance of `ScreenOverride` for the 'reset-password-mfa-webauthn-platform-challenge' screen.\n   * It initializes the `publicKey` and `showRememberDevice` properties by parsing the provided `screenContext`.\n   *\n   * @param {ScreenContext} screenContext - The screen context object from the Universal Login global context,\n   * specific to the 'reset-password-mfa-webauthn-platform-challenge' screen.\n   */\n  constructor(screenContext: ScreenContext) {\n    super(screenContext); // Call the base Screen constructor\n    this.publicKey = ScreenOverride.getPublicKeyChallenge(screenContext);\n    this.showRememberDevice = ScreenOverride.getShowRememberDeviceFlag(screenContext);\n  }\n\n  /**\n   * @static\n   * @method getPublicKeyChallenge\n   * @description Extracts the `public_key` (specifically the challenge and related options for `navigator.credentials.get()`)\n   * from the screen context's `data.passkey` object.\n   * This method uses the shared `getPublicKey` utility.\n   *\n   * @param {ScreenContext} screenContext - The screen context containing the raw data for the screen.\n   * @returns {PasskeyRead['public_key'] | null} The `public_key` object or `null` if not found or invalid.\n   */\n  static getPublicKeyChallenge = (screenContext: ScreenContext): OverrideOptions['publicKey'] => {\n    return getPublicKey(screenContext) as PasskeyRead['public_key'] | null;\n  };\n\n  /**\n   * @static\n   * @method getShowRememberDeviceFlag\n   * @description Extracts the `show_remember_device` flag from the screen context's `data` object.\n   * This method uses the shared `getShowRememberDevice` utility.\n   *\n   * @param {ScreenContext} screenContext - The screen context containing the raw data for the screen.\n   * @returns {boolean} The value of `show_remember_device`, or `false` if not present or not a boolean.\n   */\n  static getShowRememberDeviceFlag = (screenContext: ScreenContext): OverrideOptions['showRememberDevice'] => {\n    return getShowRememberDevice(screenContext);\n  };\n}"],"names":["ScreenOverride","Screen","publicKey","showRememberDevice","constructor","screenContext","super","this","getPublicKeyChallenge","getShowRememberDeviceFlag","static","getPublicKey","getShowRememberDevice"],"mappings":"iIAeM,MAAOA,UAAuBC,EAQ3BC,UAQAC,mBASP,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKL,UAAYF,EAAeQ,sBAAsBH,GACtDE,KAAKJ,mBAAqBH,EAAeS,0BAA0BJ,GAarEK,6BAAgCL,GACvBM,EAAaN,GAYtBK,iCAAoCL,GAC3BO,EAAsBP"}
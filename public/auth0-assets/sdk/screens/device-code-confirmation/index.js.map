{"version":3,"file":"index.js","sources":["../../../../src/screens/device-code-confirmation/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport { ScreenOverride } from './screen-override';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type {\n  DeviceCodeConfirmationMembers,\n  ScreenMembersOnDeviceCodeConfirmation as screenOptions,\n} from '../../../interfaces/screens/device-code-confirmation';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\n/**\n * Class implementing the Device Code Confirmation screen functionality.\n * This screen is displayed when the user needs to confirm the device code.\n */\nexport default class DeviceCodeConfirmation extends BaseContext implements DeviceCodeConfirmationMembers {\n  static screenIdentifier: string = ScreenIds.DEVICE_CODE_CONFIRMATION;\n  screen: screenOptions;\n\n  /**\n   * Creates an instance of the DeviceCodeConfirmation screen.\n   */\n  constructor() {\n    super();\n    const screenContext = this.getContext('screen') as ScreenContext;\n    this.screen = new ScreenOverride(screenContext);\n  }\n\n  /**\n   * Confirms the device code.\n   * @param payload Optional custom options to include with the request.\n   * @example\n   * ```typescript\n   * import DeviceCodeConfirmation from '@auth0/auth0-acul-js/device-code-confirmation';\n   *\n   * const deviceCodeConfirmation = new DeviceCodeConfirmation();\n   * await deviceCodeConfirmation.confirm();\n   * ```\n   */\n  async confirm(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [DeviceCodeConfirmation.screenIdentifier, FormActions.CONFIRM],\n    };\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, action: FormActions.CONFIRM });\n  }\n\n  /**\n   * Cancels the device code flow.\n   * @param payload Optional custom options to include with the request.\n   * @example\n   * ```typescript\n   * import DeviceCodeConfirmation from '@auth0/auth0-acul-js/device-code-confirmation';\n   *\n   * const deviceCodeConfirmation = new DeviceCodeConfirmation();\n   * await deviceCodeConfirmation.cancel();\n   * ```\n   */\n  async cancel(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [DeviceCodeConfirmation.screenIdentifier, FormActions.CANCEL],\n    };\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, action: FormActions.CANCEL });\n  }\n}\n\nexport { DeviceCodeConfirmationMembers, screenOptions as ScreenMembersOnDeviceCodeConfirmation };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["DeviceCodeConfirmation","BaseContext","static","ScreenIds","DEVICE_CODE_CONFIRMATION","screen","constructor","super","screenContext","this","getContext","ScreenOverride","confirm","payload","options","state","transaction","telemetry","screenIdentifier","FormActions","CONFIRM","FormHandler","submitData","action","cancel","CANCEL"],"mappings":"8RAkBqB,MAAAA,UAA+BC,EAClDC,wBAAkCC,EAAUC,yBAC5CC,OAKA,WAAAC,GACEC,QACA,MAAMC,EAAgBC,KAAKC,WAAW,UACtCD,KAAKJ,OAAS,IAAIM,EAAeH,GAcnC,aAAMI,CAAQC,GACZ,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACjB,EAAuBkB,iBAAkBC,EAAYC,gBAE7D,IAAIC,EAAYP,GAASQ,WAA0B,IAAKT,EAASU,OAAQJ,EAAYC,UAc7F,YAAMI,CAAOX,GACX,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACjB,EAAuBkB,iBAAkBC,EAAYM,eAE7D,IAAIJ,EAAYP,GAASQ,WAA0B,IAAKT,EAASU,OAAQJ,EAAYM"}
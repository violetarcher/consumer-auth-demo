{"version":3,"file":"index.js","sources":["../../../../src/screens/interstitial-captcha/index.ts"],"sourcesContent":["import { ScreenIds } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { InterstitialCaptchaMembers, SubmitCaptchaOptions } from '../../../interfaces/screens/interstitial-captcha';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\nexport default class InterstitialCaptcha extends BaseContext implements InterstitialCaptchaMembers {\n  static screenIdentifier: string = ScreenIds.INTERSTITIAL_CAPTCHA;\n\n  constructor() {\n    super();\n  }\n  /**\n   * @remarks\n   * This methods handles InterstitialCaptcha related configuration.\n   *\n   * @example\n   * import InterstitialCaptcha from \"@auth0/auth0-acul-js/interstitial-captcha\";\n   *\n   * const interstitialCaptcha = new InterstitialCaptcha();\n   * interstitialCaptcha.submitCaptcha({\n   *  captcha: \"captchaValue\",\n   * });\n   */\n  async submitCaptcha(payload: SubmitCaptchaOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [InterstitialCaptcha.screenIdentifier, 'submitCaptcha'],\n    };\n    await new FormHandler(options).submitData<SubmitCaptchaOptions>(payload);\n  }\n}\n\nexport { InterstitialCaptchaMembers, SubmitCaptchaOptions };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["InterstitialCaptcha","BaseContext","static","ScreenIds","INTERSTITIAL_CAPTCHA","constructor","super","submitCaptcha","payload","options","state","this","transaction","telemetry","screenIdentifier","FormHandler","submitData"],"mappings":"0KAOqB,MAAAA,UAA4BC,EAC/CC,wBAAkCC,EAAUC,qBAE5C,WAAAC,GACEC,QAcF,mBAAMC,CAAcC,GAClB,MAAMC,EAAuB,CAC3BC,MAAOC,KAAKC,YAAYF,MACxBG,UAAW,CAACb,EAAoBc,iBAAkB,wBAE9C,IAAIC,EAAYN,GAASO,WAAiCR"}
{"version":3,"file":"screen-override.js","sources":["../../../../src/screens/mfa-recovery-code-challenge-new-code/screen-override.ts"],"sourcesContent":["import { Screen } from '../../models/screen';\n\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { ScreenMembersOnMfaRecoveryCodeChallengeNewCode as OverrideOptions } from '../../../interfaces/screens/mfa-recovery-code-challenge-new-code';\n\n/**\n * @class ScreenOverride\n * @extends Screen\n * @implements OverrideOptions\n * @description Provides specific data accessors for the 'mfa-recovery-code-challenge-new-code' screen context.\n * It extracts and makes the `textCode` easily accessible.\n */\nexport class ScreenOverride extends Screen implements OverrideOptions {\n  /**\n   * @property {object | null} data - Screen-specific data.\n   * @property {string} data.textCode - The newly generated recovery code.\n   */\n  data: OverrideOptions['data'];\n\n  /**\n   * Initializes a new instance of the `ScreenOverride` class for the MFA Recovery Code Challenge New Code screen.\n   * Parses the screen context to extract the `textCode`.\n   * @param {ScreenContext} screenContext - The screen context provided by Universal Login.\n   */\n  constructor(screenContext: ScreenContext) {\n    super(screenContext); // Initialize the base Screen class\n    this.data = ScreenOverride.getScreenData(screenContext);\n  }\n\n  /**\n   * @static\n   * @method getScreenData\n   * @description Extracts and transforms the screen-specific data from the provided screen context.\n   * Specifically targets the `text_code` property from the raw context data and maps it to `textCode`.\n   *\n   * @param {ScreenContext} screenContext - The screen context containing the raw data.\n   * @returns {OverrideOptions['data']} The structured screen data containing the `textCode`,\n   *                                    or `null` if the required `text_code` data is not present or not a string.\n   */\n  static getScreenData = (screenContext: ScreenContext): OverrideOptions['data'] => {\n    // Access the raw data object from the context\n    const data = screenContext.data;\n\n    // Check if data exists and if the 'text_code' property is a non-empty string\n    if (!data || typeof data.text_code !== 'string' || data.text_code.length === 0) {\n      // Return null if essential data is missing or invalid\n      return null;\n    }\n\n    // Return the structured data object with the mapped property name\n    return {\n      textCode: data.text_code,\n    };\n  };\n}"],"names":["ScreenOverride","Screen","data","constructor","screenContext","super","this","getScreenData","static","text_code","length","textCode"],"mappings":"gDAYM,MAAOA,UAAuBC,EAKlCC,KAOA,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKJ,KAAOF,EAAeO,cAAcH,GAa3CI,qBAAwBJ,IAEtB,MAAMF,EAAOE,EAAcF,KAG3B,OAAKA,GAAkC,iBAAnBA,EAAKO,WAAoD,IAA1BP,EAAKO,UAAUC,OAM3D,CACLC,SAAUT,EAAKO,WALR,IAMR"}
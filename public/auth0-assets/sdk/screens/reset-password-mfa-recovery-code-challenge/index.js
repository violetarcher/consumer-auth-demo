import{FormActions as t}from"../../constants/form-actions.js";import{ScreenIds as e}from"../../constants/enums.js";import{BaseContext as s}from"../../models/base-context.js";import{FormHandler as n}from"../../utils/form-handler.js";class o extends s{static screenIdentifier=e.RESET_PASSWORD_MFA_RECOVERY_CODE_CHALLENGE;constructor(){super()}async continue(e,s){const a={state:this.transaction.state,telemetry:[o.screenIdentifier,"continue"]};await new n(a).submitData({...s,code:e,action:t.DEFAULT})}async tryAnotherMethod(e){const s={state:this.transaction.state,telemetry:[o.screenIdentifier,"tryAnotherMethod"]};await new n(s).submitData({...e,action:t.PICK_AUTHENTICATOR})}}export{o as default};
//# sourceMappingURL=index.js.map

{"version":3,"file":"index.js","sources":["../../../../src/screens/email-otp-challenge/index.ts"],"sourcesContent":["import { FormActions, ScreenIds } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { EmailOTPChallengeMembers, OtpCodeOptions, ScreenMembersOnEmailOTPChallenge as ScreenOptions } from '../../../interfaces/screens/email-otp-challenge';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\n/**\n * Represents the Email OTP Challenge screen.\n */\nexport default class EmailOTPChallenge extends BaseContext implements EmailOTPChallengeMembers {\n  static screenIdentifier: string = ScreenIds.EMAIL_OTP_CHALLENGE;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Submits the OTP code entered by the user.\n   * @param options Optional parameters to include in the submission.\n   * @example\n   * ```typescript\n   * import EmailOTPChallenge from '@auth0/auth0-acul-js/email-otp-challenge';\n   *\n   * const emailOTPChallenge = new EmailOTPChallenge();\n   * emailOTPChallenge.submitCode({\n   *   code: '123456',\n   * });\n   * ```\n   */\n  async submitCode(options: OtpCodeOptions): Promise<void> {\n    const formOptions: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [EmailOTPChallenge.screenIdentifier, 'submitCode'],\n    };\n    const payload = {\n      ...options,\n      action: FormActions.DEFAULT,\n    };\n\n    await new FormHandler(formOptions).submitData(payload);\n  }\n\n  /**\n   * Requests a new OTP code to be sent to the user's email.\n   * @param options Optional parameters to include in the resend request.\n   * @example\n   * ```typescript\n   * import EmailOTPChallenge from '@auth0/auth0-acul-js/email-otp-challenge';\n   *\n   * const emailOTPChallenge = new EmailOTPChallenge();\n   * emailOTPChallenge.resendCode();\n   * ```\n   */\n  async resendCode(options?: CustomOptions): Promise<void> {\n    const formOptions: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [EmailOTPChallenge.screenIdentifier, 'resendCode'],\n    };\n\n    const payload = {\n      ...options,\n      action: FormActions.RESEND_CODE,\n    };\n\n    await new FormHandler(formOptions).submitData(payload);\n  }\n}\n\nexport { EmailOTPChallengeMembers, ScreenOptions as ScreenMembersOnEmailOTPChallenge };\n\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["EmailOTPChallenge","BaseContext","static","ScreenIds","EMAIL_OTP_CHALLENGE","constructor","super","submitCode","options","formOptions","state","this","transaction","telemetry","screenIdentifier","payload","action","FormActions","DEFAULT","FormHandler","submitData","resendCode","RESEND_CODE"],"mappings":"wOAWqB,MAAAA,UAA0BC,EAC7CC,wBAAkCC,EAAUC,oBAE5C,WAAAC,GACEC,QAgBF,gBAAMC,CAAWC,GACf,MAAMC,EAA2B,CAC/BC,MAAOC,KAAKC,YAAYF,MACxBG,UAAW,CAACb,EAAkBc,iBAAkB,eAE5CC,EAAU,IACXP,EACHQ,OAAQC,EAAYC,eAGhB,IAAIC,EAAYV,GAAaW,WAAWL,GAchD,gBAAMM,CAAWb,GACf,MAAMC,EAA2B,CAC/BC,MAAOC,KAAKC,YAAYF,MACxBG,UAAW,CAACb,EAAkBc,iBAAkB,eAG5CC,EAAU,IACXP,EACHQ,OAAQC,EAAYK,mBAGhB,IAAIH,EAAYV,GAAaW,WAAWL"}
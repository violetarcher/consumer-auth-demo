{"version":3,"file":"index.js","sources":["../../../../src/screens/mfa-sms-list/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { MfaSmsListMembers, MfaSmsListOptions } from '../../../interfaces/screens/mfa-sms-list';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\n/**\n * @class MfaSmsList\n * Class for handling the mfa-sms-list screen.\n * @extends {BaseContext}\n */\nexport default class MfaSmsList extends BaseContext implements MfaSmsListMembers {\n  static screenIdentifier: string = ScreenIds.MFA_SMS_LIST;\n  constructor() {\n    super();\n  }\n\n  /**\n   * Selects a phone number from the list of enrolled phone numbers.\n   * @param {MfaSmsListOptions} [payload] - Optional payload for the action.\n   * @returns {Promise<void>}\n   * @throws {Error} If the index is out of bounds.\n   * @example\n   * ```typescript\n   * import MfaSmsList from '@auth0/auth0-acul-js/mfa-sms-list';\n   * const mfaSmsList = new MfaSmsList();\n   * const selectPhoneNumber = async () => {\n   *  const getEnrolledPhoneNumbers = mfaSmsList.user.enrolledPhoneNumbers;\n   *  const selectedNumber = getEnrolledPhoneNumbers[0];\n   *  await mfaSmsList.selectPhoneNumber({index: selectedNumber});\n   * }\n   * ```\n   */\n  public async selectPhoneNumber(payload?: MfaSmsListOptions): Promise<void> {\n    const index = payload?.index;\n    if (index === undefined || index < 0 || index >= (this.user?.enrolledPhoneNumbers?.length ?? 0)) {\n      throw new Error('Index out of bounds.');\n    }\n\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [MfaSmsList.screenIdentifier, 'selectPhoneNumber'],\n    };\n\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: `selection-action::${index}`,\n    });\n  }\n\n  /**\n   * Navigates back to the previous screen.\n   * @param {MfaSmsListOptions} [payload] - Optional payload for the action.\n   * @returns {Promise<void>}\n   * @example\n   * ```typescript\n   * import MfaSmsList from '@auth0/auth0-acul-js/mfa-sms-list';\n   * const mfaSmsList = new MfaSmsList();\n   * const handleBackAction = async () => {\n   *  try {\n   *    await mfaSmsList.backAction();\n   *  } catch (error) {\n   *    console.error('Failed to go back:', error);\n   *  }\n   * };\n   * ```\n   */\n  public async backAction(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [MfaSmsList.screenIdentifier, 'backAction'],\n    };\n\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: FormActions.BACK,\n    });\n  }\n}\n\nexport { MfaSmsListMembers, MfaSmsListOptions };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["MfaSmsList","BaseContext","static","ScreenIds","MFA_SMS_LIST","constructor","super","selectPhoneNumber","payload","index","undefined","this","user","enrolledPhoneNumbers","length","Error","options","state","transaction","telemetry","screenIdentifier","FormHandler","submitData","action","backAction","FormActions","BACK"],"mappings":"wOAaqB,MAAAA,UAAmBC,EACtCC,wBAAkCC,EAAUC,aAC5C,WAAAC,GACEC,QAmBK,uBAAMC,CAAkBC,GAC7B,MAAMC,EAAQD,GAASC,MACvB,QAAcC,IAAVD,GAAuBA,EAAQ,GAAKA,IAAUE,KAAKC,MAAMC,sBAAsBC,QAAU,GAC3F,MAAM,IAAIC,MAAM,wBAGlB,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACnB,EAAWoB,iBAAkB,4BAGrC,IAAIC,EAAYL,GAASM,WAA0B,IACpDd,EACHe,OAAQ,qBAAqBd,MAqB1B,gBAAMe,CAAWhB,GACtB,MAAMQ,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACnB,EAAWoB,iBAAkB,qBAGrC,IAAIC,EAAYL,GAASM,WAA0B,IACpDd,EACHe,OAAQE,EAAYC"}
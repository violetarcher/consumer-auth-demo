{"version":3,"file":"index.js","sources":["../../../../src/screens/mfa-country-codes/index.ts"],"sourcesContent":["import { ScreenIds, FormActions } from '../../constants';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport { ScreenOverride } from './screen-override';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type {\n  MfaCountryCodesMembers,\n  ScreenMembersOnMfaCountryCodes as ScreenOptions,\n  SelectCountryCodeOptions,\n} from '../../../interfaces/screens/mfa-country-codes';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\n/**\n * Class implementing the mfa-country-codes screen functionality\n * This screen allows users to select a country code for MFA phone number verification\n */\nexport default class MfaCountryCodes extends BaseContext implements MfaCountryCodesMembers {\n  static screenIdentifier: string = ScreenIds.MFA_COUNTRY_CODES;\n  screen: ScreenOptions;\n\n  /**\n   * Creates an instance of MfaCountryCodes screen manager\n   */\n  constructor() {\n    super();\n    const screenContext = this.getContext('screen') as ScreenContext;\n    this.screen = new ScreenOverride(screenContext);\n  }\n\n  /**\n   * Selects a country code from the available options\n   * @param payload The options containing the country code selection action\n   * @example\n   * ```typescript\n   * import MfaCountryCodes from '@auth0/auth0-acul-js/mfa-country-codes';\n   *\n   * const mfaCountryCodes = new MfaCountryCodes();\n   *\n   * // Get the available country codes and phone prefixes\n   * const { screen } = mfaCountryCodes;\n   * const { phone_prefixes } = screen.data\n   * const {country_code, phone_prefix} = phone_prefixes[0]\n   *\n   * await mfaCountryCodes.selectCountryCode({\n   *   country_code: 'US',\n   *   phone_prefix: '+1',\n   * });\n   * ```\n   */\n  async selectCountryCode(payload: SelectCountryCodeOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [MfaCountryCodes.screenIdentifier, 'selectCountryCode'],\n    };\n    const { country_code, phone_prefix } = payload;\n    const action = `selection-action::${country_code}${phone_prefix}`;\n    await new FormHandler(options).submitData<SelectCountryCodeOptions>({\n      ...payload,\n      action,\n    });\n  }\n\n  /**\n   * Navigates back to the previous screen\n   * @param payload Optional custom options to include with the request\n   * @example\n   * ```typescript\n   * import MfaCountryCodes from '@auth0/auth0-acul-js/mfa-country-codes';\n   *\n   * const mfaCountryCodes = new MfaCountryCodes();\n   * await mfaCountryCodes.goBack();\n   * ```\n   */\n  async goBack(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [MfaCountryCodes.screenIdentifier, 'goBack'],\n    };\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: FormActions.BACK,\n    });\n  }\n}\n\nexport { MfaCountryCodesMembers, ScreenOptions as ScreenMembersOnMfaCountryCodes, SelectCountryCodeOptions };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["MfaCountryCodes","BaseContext","static","ScreenIds","MFA_COUNTRY_CODES","screen","constructor","super","screenContext","this","getContext","ScreenOverride","selectCountryCode","payload","options","state","transaction","telemetry","screenIdentifier","country_code","phone_prefix","action","FormHandler","submitData","goBack","FormActions","BACK"],"mappings":"8RAmBqB,MAAAA,UAAwBC,EAC3CC,wBAAkCC,EAAUC,kBAC5CC,OAKA,WAAAC,GACEC,QACA,MAAMC,EAAgBC,KAAKC,WAAW,UACtCD,KAAKJ,OAAS,IAAIM,EAAeH,GAuBnC,uBAAMI,CAAkBC,GACtB,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACjB,EAAgBkB,iBAAkB,uBAE1CC,aAAEA,EAAYC,aAAEA,GAAiBP,EACjCQ,EAAS,qBAAqBF,IAAeC,UAC7C,IAAIE,EAAYR,GAASS,WAAqC,IAC/DV,EACHQ,WAeJ,YAAMG,CAAOX,GACX,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACjB,EAAgBkB,iBAAkB,iBAE1C,IAAII,EAAYR,GAASS,WAA0B,IACpDV,EACHQ,OAAQI,EAAYC"}
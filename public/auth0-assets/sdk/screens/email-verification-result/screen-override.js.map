{"version":3,"file":"screen-override.js","sources":["../../../../src/screens/email-verification-result/screen-override.ts"],"sourcesContent":["import { Screen } from '../../models/screen';\nimport { getLoginLink } from '../../shared/screen';\n\n\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { ScreenMembersOnEmailVerificationResult as OverrideOptions } from '../../../interfaces/screens/email-verification-result';\n\n/**\n * @class ScreenOverride\n * @extends Screen\n * @implements OverrideOptions\n * @description Screen-specific override for the Email Verification Result screen.\n * This class ensures that the `data.status` and `links.login` properties are correctly\n * typed and accessible for this particular screen.\n */\nexport class ScreenOverride extends Screen implements OverrideOptions {\n  /**\n   * Screen-specific data containing the status of the email verification.\n   * @type {{ status: string; } | null}\n   */\n  data: OverrideOptions['data'];\n\n  /**\n   * Navigation links available on this screen, specifically the login link.\n   * @type {{ login: string; } | null}\n   */\n  loginLink: OverrideOptions['loginLink'];\n\n  /**\n   * Creates an instance of ScreenOverride for the Email Verification Result screen.\n   * It initializes the `data` and `links` properties by parsing the provided `screenContext`.\n   *\n   * @param {ScreenContext} screenContext - The screen context object from the Universal Login global context,\n   * specific to the 'email-verification-result' screen.\n   */\n  constructor(screenContext: ScreenContext) {\n    super(screenContext); // Call the base Screen constructor\n    this.data = ScreenOverride.getScreenData(screenContext);\n    // The base Screen constructor already populates this.links.\n    this.loginLink = getLoginLink(screenContext);\n  }\n\n  /**\n   * @static\n   * @method getScreenData\n   * @description Extracts and transforms the screen-specific data from the provided screen context.\n   * Specifically, it retrieves the `status` of the email verification.\n   *\n   * @param {ScreenContext} screenContext - The screen context containing the raw data for the screen.\n   * @returns {OverrideOptions['data']} The structured screen data containing the `status`,\n   * or `null` if the `status` is not present or not a string in the context data.\n   */\n  static getScreenData = (screenContext: ScreenContext): OverrideOptions['data'] => {\n    const data = screenContext.data; // Access the raw data object\n\n    // Check if data exists and contains the 'status' property as a string\n    if (!data || typeof data.status !== 'string') {\n      return null; // Return null if essential data is missing or not a string\n    }\n\n    // Return the structured data object\n    return {\n      status: data.status,\n    };\n  };\n}"],"names":["ScreenOverride","Screen","data","loginLink","constructor","screenContext","super","this","getScreenData","getLoginLink","static","status"],"mappings":"sGAeM,MAAOA,UAAuBC,EAKlCC,KAMAC,UASA,WAAAC,CAAYC,GACVC,MAAMD,GACNE,KAAKL,KAAOF,EAAeQ,cAAcH,GAEzCE,KAAKJ,UAAYM,EAAaJ,GAahCK,qBAAwBL,IACtB,MAAMH,EAAOG,EAAcH,KAG3B,OAAKA,GAA+B,iBAAhBA,EAAKS,OAKlB,CACLA,OAAQT,EAAKS,QALN,IAMR"}
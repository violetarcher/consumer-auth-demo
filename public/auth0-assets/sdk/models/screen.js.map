{"version":3,"file":"screen.js","sources":["../../../src/models/screen.ts"],"sourcesContent":["import type { ScreenContext, ScreenMembers } from '../../interfaces/models/screen';\n\n/**\n * @class Screen\n * @description Provides access to the current screen's configuration, including captcha settings, data, links, and text content.\n * @implements {ScreenMembers}\n */\nexport class Screen implements ScreenMembers {\n  /** @property {string} name - The name of the current screen */\n  name: ScreenMembers['name'];\n\n  /** @property {string | null} captchaImage - URL to the captcha image if available */\n  captchaImage: ScreenMembers['captchaImage'];\n\n  /** @property {string | null} captchaSiteKey - The site key for captcha integration */\n  captchaSiteKey: ScreenMembers['captchaSiteKey'];\n\n  /** @property {string | null} captchaProvider - The provider of the captcha service */\n  captchaProvider: ScreenMembers['captchaProvider'];\n\n  /** @property {boolean} isCaptchaAvailable - Indicates if captcha is available on this screen */\n  isCaptchaAvailable: ScreenMembers['isCaptchaAvailable'];\n\n  /** @property {Record<string, any> | null} data - Screen-specific data for rendering or logic */\n  data: ScreenMembers['data'];\n\n  /** @property {Record<string, string> | null} links - Navigation links available on this screen */\n  links: ScreenMembers['links'];\n\n  /** @property {Record<string, string> | null} texts - Text content for UI elements */\n  texts: ScreenMembers['texts'];\n\n  /** @property {CaptchaContext | null} captcha - Complete captcha configuration */\n  captcha: ScreenMembers['captcha'];\n\n  /**\n   * @constructor\n   * @param {ScreenContext} screen - The screen context from Universal Login\n   */\n  constructor(screen: ScreenContext) {\n    this.name = screen.name;\n    this.captchaImage = screen.captcha?.image ?? null;\n    this.captchaSiteKey = screen.captcha?.siteKey ?? null;\n    this.captchaProvider = screen.captcha?.provider ?? null;\n    this.isCaptchaAvailable = !!screen.captcha;\n    this.texts = screen.texts ?? null;\n    this.captcha = screen.captcha ?? null;\n    this.data = Screen.getScreenData(screen);\n    this.links = Screen.getScreenLinks(screen);\n  }\n\n  /**\n   * @static\n   * @method getScreenData\n   * @description Extracts screen data from the context\n   * @param {ScreenContext} screen - The screen context from Universal Login\n   * @returns {Record<string, any> | null} Screen data or null if unavailable\n   */\n  static getScreenData(screen: ScreenContext): ScreenMembers['data'] {\n    return (screen.data ?? null) as ScreenMembers['data'];\n  }\n\n  /**\n   * @static\n   * @method getScreenLinks\n   * @description Extracts navigation links from the context\n   * @param {ScreenContext} screen - The screen context from Universal Login\n   * @returns {Record<string, string> | null} Screen links or null if unavailable\n   */\n  static getScreenLinks(screen: ScreenContext): ScreenMembers['links'] {\n    return screen.links ?? null;\n  }\n}\n"],"names":["Screen","name","captchaImage","captchaSiteKey","captchaProvider","isCaptchaAvailable","data","links","texts","captcha","constructor","screen","this","image","siteKey","provider","getScreenData","getScreenLinks"],"mappings":"MAOaA,EAEXC,KAGAC,aAGAC,eAGAC,gBAGAC,mBAGAC,KAGAC,MAGAC,MAGAC,QAMA,WAAAC,CAAYC,GACVC,KAAKX,KAAOU,EAAOV,KACnBW,KAAKV,aAAeS,EAAOF,SAASI,OAAS,KAC7CD,KAAKT,eAAiBQ,EAAOF,SAASK,SAAW,KACjDF,KAAKR,gBAAkBO,EAAOF,SAASM,UAAY,KACnDH,KAAKP,qBAAuBM,EAAOF,QACnCG,KAAKJ,MAAQG,EAAOH,OAAS,KAC7BI,KAAKH,QAAUE,EAAOF,SAAW,KACjCG,KAAKN,KAAON,EAAOgB,cAAcL,GACjCC,KAAKL,MAAQP,EAAOiB,eAAeN,GAUrC,oBAAOK,CAAcL,GACnB,OAAQA,EAAOL,MAAQ,KAUzB,qBAAOW,CAAeN,GACpB,OAAOA,EAAOJ,OAAS"}